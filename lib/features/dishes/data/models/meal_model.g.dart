// GENERATED CODE - DO NOT MODIFY BY HAND

// ignore_for_file: duplicate_ignore, unused_element, unused_field, invalid_annotation_target, sort_child_properties_last, always_put_required_named_parameters_first, constant_identifier_names, non_constant_identifier_names, prefer_single_quotes, lines_longer_than_80_chars, prefer_const_constructors, prefer_const_literals_to_create_immutables, unnecessary_this, prefer_const_declarations, avoid_unused_constructor_parameters, prefer_final_fields, prefer_const_constructors_in_immutables, unnecessary_new, unnecessary_null_in_if_null_operators, library_private_types_in_public_api, depend_on_referenced_packages, prefer_typing_uninitialized_variables, prefer_void_to_null, always_put_control_body_on_new_line, avoid_relative_lib_imports, avoid_private_typedef_functions, avoid_renaming_method_parameters, avoid_returning_this, avoid_void_async, camel_case_extensions, cancel_subscriptions, cascade_invocations, comment_references, control_flow_in_finally, curly_braces_in_flow_control_structures, empty_catches, empty_constructor_bodies, file_names, flutter_style_todos, hash_and_equals, implementation_imports, iterable_contains_unrelated_type, join_return_with_assignment, leading_newlines_in_multiline_strings, library_names, library_prefixes, list_remove_unrelated_type, literal_only_boolean_expressions, missing_whitespace_between_adjacent_strings, no_adjacent_strings_in_list, no_duplicate_case_values, no_logic_in_create_state, no_runtimeType_toString, null_check_on_nullable_type_parameter, omit_local_variable_types, one_member_abstracts, only_throw_errors, overridden_fields, package_api_docs, package_names, package_prefixed_library_names, parameter_assignments, prefer_adjacent_string_concatenation, prefer_asserts_in_initializer_lists, prefer_asserts_with_message, prefer_collection_literals, prefer_conditional_assignment, prefer_constructors_over_static_methods, prefer_contains, prefer_double_quotes, prefer_equal_for_default_values, prefer_expression_function_bodies, prefer_final_in_for_each, prefer_final_locals, prefer_final_parameters, prefer_foreach, prefer_function_declarations_over_variables, prefer_generic_function_type_aliases, prefer_if_elements_to_conditional_operators, prefer_if_null_operators, prefer_initializing_formals, prefer_inlined_adds, prefer_int_literals, prefer_interpolation_to_compose_strings, prefer_is_empty, prefer_is_not_empty, prefer_is_not_operator, prefer_iterable_whereType, prefer_mixin, prefer_null_aware_operators, prefer_relative_imports, prefer_spread_collections, provide_deprecation_message, recursive_getters, require_trailing_commas, sized_box_for_whitespace, sort_pub_dependencies, sort_unnamed_constructors_first, test_types_in_equals, throw_in_finally, tighten_type_of_initializing_formals, type_annotate_public_apis, type_init_formals, unawaited_futures, unnecessary_await_in_return, unnecessary_brace_in_string_interps, unnecessary_const, unnecessary_constructor_name, unnecessary_final, unnecessary_getters_setters, unnecessary_lambdas, unnecessary_late, unnecessary_null_aware_assignments, unnecessary_null_checks, unnecessary_nullable_for_final_variable_declarations, unnecessary_overrides, unnecessary_parenthesis, unnecessary_raw_strings, unnecessary_statements, unnecessary_string_escapes, unnecessary_string_interpolations, unnecessary_to_list_in_spreads, unnecessary_type_check, unnecessary_type_check_in_asserts, unnecessary_type_check_in_equality_operator, unnecessary_type_check_in_if_null_operator, unnecessary_type_check_in_logical_operator, unnecessary_type_check_in_null_aware_operator, unnecessary_type_check_in_ternary_operator, unnecessary_type_check_in_while_loop, unnecessary_type_check_in_while_loop_condition, unnecessary_type_check_in_while_loop_initializer, unnecessary_type_check_in_while_loop_update, use_build_context_synchronously, use_full_hex_values_for_flutter_colors, use_function_type_syntax_for_parameters, use_key_in_widget_constructors, use_late_for_private_fields_and_variables, use_named_constants, use_named_parameters, use_rethrow_when_possible, use_setters_to_change_properties, use_string_buffers, use_super_parameters, valid_regexps, void_checks

part of 'meal_model.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

_$MealModelImpl _$$MealModelImplFromJson(Map<String, dynamic> json) =>
    _$MealModelImpl(
      idMeal: json['idMeal'] as String,
      strMeal: json['strMeal'] as String,
      strDrinkAlternate: json['strDrinkAlternate'] as String?,
      strCategory: json['strCategory'] as String,
      strArea: json['strArea'] as String,
      strInstructions: json['strInstructions'] as String,
      strMealThumb: json['strMealThumb'] as String?,
      strTags: json['strTags'] as String?,
      strYoutube: json['strYoutube'] as String?,
      strIngredient1: json['strIngredient1'] as String?,
      strIngredient2: json['strIngredient2'] as String?,
      strIngredient3: json['strIngredient3'] as String?,
      strIngredient4: json['strIngredient4'] as String?,
      strIngredient5: json['strIngredient5'] as String?,
      strIngredient6: json['strIngredient6'] as String?,
      strIngredient7: json['strIngredient7'] as String?,
      strIngredient8: json['strIngredient8'] as String?,
      strIngredient9: json['strIngredient9'] as String?,
      strIngredient10: json['strIngredient10'] as String?,
      strIngredient11: json['strIngredient11'] as String?,
      strIngredient12: json['strIngredient12'] as String?,
      strIngredient13: json['strIngredient13'] as String?,
      strIngredient14: json['strIngredient14'] as String?,
      strIngredient15: json['strIngredient15'] as String?,
      strIngredient16: json['strIngredient16'] as String?,
      strIngredient17: json['strIngredient17'] as String?,
      strIngredient18: json['strIngredient18'] as String?,
      strIngredient19: json['strIngredient19'] as String?,
      strIngredient20: json['strIngredient20'] as String?,
      strMeasure1: json['strMeasure1'] as String?,
      strMeasure2: json['strMeasure2'] as String?,
      strMeasure3: json['strMeasure3'] as String?,
      strMeasure4: json['strMeasure4'] as String?,
      strMeasure5: json['strMeasure5'] as String?,
      strMeasure6: json['strMeasure6'] as String?,
      strMeasure7: json['strMeasure7'] as String?,
      strMeasure8: json['strMeasure8'] as String?,
      strMeasure9: json['strMeasure9'] as String?,
      strMeasure10: json['strMeasure10'] as String?,
      strMeasure11: json['strMeasure11'] as String?,
      strMeasure12: json['strMeasure12'] as String?,
      strMeasure13: json['strMeasure13'] as String?,
      strMeasure14: json['strMeasure14'] as String?,
      strMeasure15: json['strMeasure15'] as String?,
      strMeasure16: json['strMeasure16'] as String?,
      strMeasure17: json['strMeasure17'] as String?,
      strMeasure18: json['strMeasure18'] as String?,
      strMeasure19: json['strMeasure19'] as String?,
      strMeasure20: json['strMeasure20'] as String?,
      strSource: json['strSource'] as String?,
      strImageSource: json['strImageSource'] as String?,
      strCreativeCommonsConfirmed:
          json['strCreativeCommonsConfirmed'] as String?,
      dateModified: json['dateModified'] as String?,
    );

Map<String, dynamic> _$$MealModelImplToJson(_$MealModelImpl instance) =>
    <String, dynamic>{
      'idMeal': instance.idMeal,
      'strMeal': instance.strMeal,
      'strDrinkAlternate': instance.strDrinkAlternate,
      'strCategory': instance.strCategory,
      'strArea': instance.strArea,
      'strInstructions': instance.strInstructions,
      'strMealThumb': instance.strMealThumb,
      'strTags': instance.strTags,
      'strYoutube': instance.strYoutube,
      'strIngredient1': instance.strIngredient1,
      'strIngredient2': instance.strIngredient2,
      'strIngredient3': instance.strIngredient3,
      'strIngredient4': instance.strIngredient4,
      'strIngredient5': instance.strIngredient5,
      'strIngredient6': instance.strIngredient6,
      'strIngredient7': instance.strIngredient7,
      'strIngredient8': instance.strIngredient8,
      'strIngredient9': instance.strIngredient9,
      'strIngredient10': instance.strIngredient10,
      'strIngredient11': instance.strIngredient11,
      'strIngredient12': instance.strIngredient12,
      'strIngredient13': instance.strIngredient13,
      'strIngredient14': instance.strIngredient14,
      'strIngredient15': instance.strIngredient15,
      'strIngredient16': instance.strIngredient16,
      'strIngredient17': instance.strIngredient17,
      'strIngredient18': instance.strIngredient18,
      'strIngredient19': instance.strIngredient19,
      'strIngredient20': instance.strIngredient20,
      'strMeasure1': instance.strMeasure1,
      'strMeasure2': instance.strMeasure2,
      'strMeasure3': instance.strMeasure3,
      'strMeasure4': instance.strMeasure4,
      'strMeasure5': instance.strMeasure5,
      'strMeasure6': instance.strMeasure6,
      'strMeasure7': instance.strMeasure7,
      'strMeasure8': instance.strMeasure8,
      'strMeasure9': instance.strMeasure9,
      'strMeasure10': instance.strMeasure10,
      'strMeasure11': instance.strMeasure11,
      'strMeasure12': instance.strMeasure12,
      'strMeasure13': instance.strMeasure13,
      'strMeasure14': instance.strMeasure14,
      'strMeasure15': instance.strMeasure15,
      'strMeasure16': instance.strMeasure16,
      'strMeasure17': instance.strMeasure17,
      'strMeasure18': instance.strMeasure18,
      'strMeasure19': instance.strMeasure19,
      'strMeasure20': instance.strMeasure20,
      'strSource': instance.strSource,
      'strImageSource': instance.strImageSource,
      'strCreativeCommonsConfirmed': instance.strCreativeCommonsConfirmed,
      'dateModified': instance.dateModified,
    };
